---
title: "An example exploratory analysis script"
date: "2024-02-07"
output: html_document
---

  
  
This Quarto file loads the cleaned data and does some exploring.

I'm only showing it the way where the code is included in the file. 
As described in the `processing_code` materials, I currently prefer the approach of having R code in a separate file and pulling it in.

But I already had this written and haven't yet re-done it that way. Feel free to redo and send a pull request on GitHub :)

Again, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files.
And sometimes, an R script with enough comments is good enough and one doesn't need a Quarto file.

Also note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you'll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.

As part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.

Start by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables. 

Plots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.

# Setup



Load the data.

```{r}
pitchdata <- read.csv("C:/Users/cplay/Downloads/savant_data.csv")
tommyjohn <- read.csv("C:/Users/cplay/Downloads/TommyJohnData.csv")

pitchdata
```





# Data Cleaning




```{r}
# data cleaning
library(here) #for data loading/saving
install.packages("dplyr")
library(dplyr)
library(skimr)
library(ggplot2)
library(stringr)
cleanpitch <- pitchdata %>%
  mutate(first_name = str_trim(str_extract(player_name, "(?<=, ).*")),
         last_name = str_trim(str_extract(player_name, ".*(?=,)")),
         player_name_clean = paste(first_name, last_name)) %>%
  select(-player_name, -first_name, -last_name)

colnames(tommyjohn)[1] <- "player_name" # Rename Name to player_name in tommy_john_data
```


# Data Cleaning Continued


```{r}
# Merge datasets on player_name
merged_data <- left_join(tommyjohn, cleanpitch, by = c("player_name" = "player_name_clean"))
```

Data Exploration

```{r}
str(merged_data)
head(merged_data) 
```

Data Viz SetUp

```{r}
# Calculate average speeds and spin rates for each pitch type
average_data <- merged_data %>%
  mutate(
    avg_ff_speed = rowMeans(select(., FF_release_speed, SI_release_speed), na.rm = TRUE),
    avg_ff_spin = rowMeans(select(., FF_release_spin_rate, SI_release_spin_rate), na.rm = TRUE),
    avg_ch_speed = CH_release_speed,
    avg_ch_spin = CH_release_spin_rate,
    avg_cu_speed = CU_release_speed,
    avg_cu_spin = CU_release_spin_rate,
    avg_fc_speed = FC_release_speed,
    avg_fc_spin = FC_release_spin_rate,
    avg_sl_speed = SL_release_speed,
    avg_sl_spin = SL_release_spin_rate
  ) %>%
  select(player_name, avg_ff_speed, avg_ff_spin, avg_ch_speed, avg_ch_spin, avg_cu_speed, avg_cu_spin, avg_fc_speed, avg_fc_spin, avg_sl_speed, avg_sl_spin, TJS)

```

Data Viz

```{r}
library(ggplot2)
library(tidyr)

# Reshape data for easier plotting
speed_data <- average_data %>%
  select(player_name, avg_ff_speed, avg_ch_speed, avg_cu_speed, avg_fc_speed, avg_sl_speed, TJS) %>%
  gather(key = "pitch_type", value = "speed", -player_name, -TJS)

spin_data <- average_data %>%
  select(player_name, avg_ff_spin, avg_ch_spin, avg_cu_spin, avg_fc_spin, avg_sl_spin, TJS) %>%
  gather(key = "pitch_type", value = "spin_rate", -player_name, -TJS)

# 1. Distribution of average speeds for different pitch types
ggplot(speed_data, aes(x = pitch_type, y = speed, fill = pitch_type)) +
  geom_boxplot() +
  labs(title = "Distribution of Average Speeds for Different Pitch Types", x = "Pitch Type", y = "Speed (mph)") +
  theme_minimal()

# 2. Distribution of average spin rates for different pitch types
ggplot(spin_data, aes(x = pitch_type, y = spin_rate, fill = pitch_type)) +
  geom_boxplot() +
  labs(title = "Distribution of Average Spin Rates for Different Pitch Types", x = "Pitch Type", y = "Spin Rate (rpm)") +
  theme_minimal()

# 3. Comparison of average speeds for pitchers with and without Tommy John surgery
ggplot(speed_data, aes(x = TJS, y = speed, fill = as.factor(TJS))) +
  geom_boxplot() +
  facet_wrap(~pitch_type) +
  labs(title = "Comparison of Average Speeds for Pitchers with and without Tommy John Surgery", x = "Tommy John Surgery (0 = No, 1 = Yes)", y = "Speed (mph)") +
  theme_minimal()

# 4. Comparison of average spin rates for pitchers with and without Tommy John surgery
ggplot(spin_data, aes(x = TJS, y = spin_rate, fill = as.factor(TJS))) +
  geom_boxplot() +
  facet_wrap(~pitch_type) +
  labs(title = "Comparison of Average Spin Rates for Pitchers with and without Tommy John Surgery", x = "Tommy John Surgery (0 = No, 1 = Yes)", y = "Spin Rate (rpm)") +
  theme_minimal() 
```

```{r}

```


# Notes




